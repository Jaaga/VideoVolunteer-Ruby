- story = ['state', 'cc_name', 'district', 'iu_theme', 'subcategory', 'description', 'story_type', 'shoot_plan', 'story_rating']
- footage = ['editor', 'edit_status', 'payment_status', 'iu_themes', 'description', 'folder_title', 'review_notes', 'edited_video_rating', 'youtube_url', 'video_title', 'subtitle_info', 'subtheme', 'project', 'reviewer_name', 'editor_changes_needed', 'cc_feedback', 'publishing_suggestions', 'final_video_rating', 'stalin_notes', 'video_type']
- impact = ['impact_possible', 'target_official', 'target_official_email', 'target_official_phone', 'desired_change', 'impact_plan', 'impact_followup', 'impact_followup_notes', 'impact_uid', 'impact_process', 'impact_status', 'milestone', 'impact_time', 'collaborations', 'people_involved', 'people_impacted', 'villages_impacted', 'impact_production_status', 'impact_review', 'payment_approved', 'impact_reviewer']
- screening = ['screening_done', 'screening_headcount', 'screening_notes', 'official_involved', 'officials_at_screening_number', 'officials_at_screening', 'official_screening_notes']
- extra = ['flag', 'flag_notes']

- story_dates = ['story_date']
- footage_dates = ['raw_footage_review_date', 'backup_received_date', 'state_edit_date', 'edit_received_date', 'rough_cut_edit_date', 'review_date', 'finalized_date', 'youtube_date', 'iu_publish_date', 'received_cc_date', 'edit_in_goa_date', 'state_rough_cut_date', 'goa_rough_cut_date']
- impact_dates = ['impact_date', 'impact_approval_date']
- extra_dates = ['created_at', 'updated_at']

%h1= "Story: #{@track.uid}"

%h2 Story
.table-responsive
  %table.table.table-bordered.table-striped#view-margin
    - story.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
    - story_dates.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
%h2 Footage
.table-responsive
  %table.table.table-bordered.table-striped#view-margin
    - footage.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
    - footage_dates.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
%h2 Impact
.table-responsive
  %table.table.table-bordered.table-striped#view-margin
    - impact.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
    - impact_dates.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
%h2 Screening
.table-responsive
  %table.table.table-bordered.table-striped#view-margin
    - screening.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
%h2 Extra
.table-responsive.space
  %table.table.table-bordered.table-striped#view-margin
    -extra.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")
    %tr
      %th Notes
      %td= @track.note
    -extra_dates.each do |x|
      %tr
        %th= x.split('_').map(&:capitalize).join(' ').capitalize
        %td=h @track.send(:"#{x}")

%a.btn.btn-default{:href => "/edit/#{@track.uid}", :role => 'button'} Edit
- if @track.flag.nil?
  %a.btn.btn-default{:href => "/flag/#{@track.uid}", :role => 'button'} Flag
- else
  %a.btn.btn-default{:href => "/unflag/#{@track.uid}", :role => 'button'} Unflag
%a.btn.btn-default{:href => "/delete/#{@track.uid}", :role => 'button'} Delete
